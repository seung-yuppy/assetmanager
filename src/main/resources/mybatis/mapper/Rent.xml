<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.example.assetmanager.dao.RentDAO">
	<select id="findByAdminUser" resultType="UserInfoDTO">
		SELECT U.id
			   ,U.username
			   ,U.profile_image
			   ,D.dept_name
			   ,U.role
		FROM "User" U 
		JOIN Department D ON U.department_id = D.id
		WHERE D.dept_name = '경영지원팀' 
		AND U.role = 'admin'
	</select>
	
	<select id="findByManagerUser" resultType="UserInfoDTO">
		SELECT U.id
			   ,U.username
			   ,U.profile_image
			   ,D.dept_name
			   ,U.role
		FROM "User" U
		JOIN Department D ON U.department_id = D.id
		WHERE U.role = 'manager'
	</select>
	
	<select id="findByAsset" parameterType="int" resultType="AssetDTO">
		SELECT asset_name, spec, count(*) AS count
		FROM Asset		
		<where>
        <if test="categoryId != 0">
            AND category_id = #{categoryId}
        </if>
        	AND is_valid = 1
        	AND user_id IS NULL
        </where>
        GROUP BY asset_name, spec
	</select>
		
	<insert id="insertRent" parameterType="RentDTO" useGeneratedKeys="true" keyProperty="rentDTO.id" keyColumn="id">
		INSERT INTO Rent (approval_id, user_id, title, return_date, request_msg) 
		VALUES (#{rentDTO.approvalId}, #{userId}, '가나더', TO_TIMESTAMP(#{rentDTO.returnDate}, 'YYYY-MM-DD'), #{rentDTO.requestMsg})
	</insert>
	
	<insert id="insertRentContent" parameterType="RentContentDTO">
		INSERT INTO RENT_CONTENT (rent_id,asset_id)
		VALUES (#{rentContentDTO.rentId}, #{rentContentDTO.assetId})
	</insert>
	
	<select id="selectCount">
		SELECT id AS asset_id
		FROM Asset
		WHERE asset_name = #{assetName} 
			AND user_id IS NULL
			AND is_valid = 1
		FETCH FIRST #{count} ROWS ONLY			
	</select>

	<update id="updateAsset">
		UPDATE Asset SET user_id = #{userId}
		WHERE asset_id IN (#{assetId})
	</update>

</mapper>
